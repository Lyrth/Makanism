
apply from: 'dependencies.gradle'
apply from: 'extern.gradle'

ext {
    jdk = '1.11'
    
    absoluteOutputDir = "$rootDir/$outputDir" as String
    absoluteOutputLibDir = "$absoluteOutputDir/$outputLibDir" as String
}

allprojects {
    apply plugin: 'java'

    sourceCompatibility = jdk
    targetCompatibility = jdk

    group = artifact_group
    version = project_version
}

subprojects {
    archivesBaseName = "makanism-$project.name"

    project.ext.baseOutputDir = "$rootProject.projectDir/$outputDir"

    jar {
        manifest {
            attributes(
                    'Implementation-Title': archivesBaseName,
                    'Implementation-Version': archiveVersion
            )
        }
    }
}

dependencies {
    implementation project(':api')
    implementation project(':common')
    runtimeOnly project(':bot')
}

jar.enabled = false     // disable jar creation for root project

task buildOutput {
    dependsOn(build)
    shouldRunAfter(build)
    subprojects.each { dependsOn it.tasks.jar }

    mkdir absoluteOutputDir
    mkdir absoluteOutputLibDir
    outputs.dir(absoluteOutputLibDir)
    def deps = [] as Collection<File>
    afterEvaluate {
        deps = configurations.runtimeClasspath.findAll { it.name != bot_archive_name }
        inputs.files(deps)
    }
    doLast {
        println "Copying dependencies into ${absoluteOutputLibDir}..."
        copy {  // copy the dependencies
            from deps
            into absoluteOutputLibDir
        }

        // Filter unneeded dependencies (from previous copies)
        Collection<String> inDir = layout.files {
            file(absoluteOutputLibDir).listFiles()
        }.collect { it.name }

        Collection<String> required = deps.collect { it.name }

        Collection<String> toDelete = (inDir - required).collect { "$absoluteOutputLibDir/$it" as String }

        println 'Deleting unneeded files...'
        toDelete.each { println "- $it" }
        delete toDelete
    }
}
